# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

0 * * * * cd /usr/local/src/opengrid; python recipes/synctmpo.py > /usr/local/data/logs/synctmpo.log 2>&1
2 * * * * cd /usr/local/src/opengrid; python recipes/timeseries_7days.py > /usr/local/data/logs/timeseries_7days.log 2>&1
30 5 * * * cd /usr/local/src/opengrid; python recipes/electricity_standby.py > /usr/local/data/logs/electricity_standby.log 2>&1
10 0 * * * cd /usr/local/src/opengrid; python recipes/carpetplot.py > /usr/local/data/logs/carpetplot.log 2>&1
50 2 * * * cd /usr/local/src/opengrid; python recipes/cache_daily_totals.py > /usr/local/data/logs/cache_daily_total.log 2>&1
59 11 * * * cd /usr/local/src/opengrid; python recipes/alert_nodata.py > /usr/local/data/logs/alert_nodata.log 2>&1

